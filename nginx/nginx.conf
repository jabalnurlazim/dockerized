user  nginx;
worker_processes  auto;
worker_cpu_affinity auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    # client_body_in_file_only on;
    client_body_in_single_buffer on;

    map $request_body $req_body_step_1 {
        "~(?<start_request>.*)\&(?<pwd>.*password)=[^\&]*(?<end_request>.*)"  "$start_request$end_request";
        default        $request_body;
    }

    map $req_body_step_1 $req_body_step_2 {
        "~(?<start_request>.*)\&(?<pwd>.*password)=[^\&]*(?<end_request>.*)"  "$start_request$end_request";
        default        $req_body_step_1;
    }

    map $req_body_step_2 $req_body_step_3 {
        "~(?<start_request>.*)\&(?<pwd>.*password)=[^\&]*(?<end_request>.*)"  "$start_request$end_request";
        default        $req_body_step_2;
    }

    map $req_body_step_3 $req_body_step_4 {
        "~(?<start_request>.*)\&(?<pwd>.*password)=[^\&]*(?<end_request>.*)"  "$start_request$end_request";
        default        $req_body_step_3;
    }

    map $req_body_step_4 $req_body_step_5 {
        "~(?<start_request>.*)\&(?<pwd>.*password)=[^\&]*(?<end_request>.*)"  "$start_request$end_request";
        default        $req_body_step_4;
    }

    map $req_body_step_5 $req_body_step_6 {
        "~(?<pwd>.*password)=[^\&]*(?<end_request>.*)"  "$end_request";
        default        $req_body_step_5;
    }

    log_format  main  '{"Client-IP":$remote_addr, "Remote-User":$remote_user, "Time":[$time_local], "Request-Method":$request_method, '
                      '"Host":$scheme://$host:$server_port, "Path":$request_uri "Status-Code":$status, "Body-Size":$body_bytes_sent, '
                      '"Connection-Requests":$connection_requests, "Proxy-Response-Time":$request_time "HTTP-Referrer":$http_referer, '
                      '"HTTP-User-Agent":$http_user_agent, "HTTP-X-Forwarded-For":$http_x_forwarded_for, '
                      '"Request-Body": $req_body_step_6, "Authorization-Header": $http_Authorization}';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}